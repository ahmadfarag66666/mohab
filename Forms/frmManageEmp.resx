<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAPCAYAAACFgM0XAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsAAAA7AAWrWiQkAAAJZSURBVEhLvZNbbxJRFIXnP5r4E/wjWnqLvUDik6j1Sa3G
        J59MW1EKLfdrocwAZbjTWk18IyHbvfY5Z2YYeIbkyz5rnbP32g+Dtf/qK31PVqhsDzcG8pB7We2R9fzg
        AxVvB3SWbW0M5CE3VXPJenH4kcqtIZ3n7CXOcvyY8bW+y65B7vitnE3VPYE30AB5yE3X+3oBZ0wXeYex
        dQ3CzVy3Dl7Tk6fPPKAvcuy/jIf8uPSd853plxlGc0Uecq9uBmRtHX2iKhs/Cu0AHe+c0GcMD/6gIxy2
        zvfnrAd5yL1uDNUCtc6EEqUuJYodvxZRu/RTEzl8I8MXi4XHOo13iZLql16ep+iwVj7ykJttjvwFkuU7
        +hUAWnk9z9s+eish8/l8Bfi4V2/9Hn+Oj1kg1xrzAsenVO/O6LLS47+FKyT57yGakTN80S7t6CWm06kH
        NHz1Fj1qTpCghzzk5u2Jv0Cq1pevMlUbaHBWOo3Kd7vH7yTMdd0V4OM+Xedefose0yfIWc01CxScqb/A
        1c2Q0gxqEOUNePiJhDiO47FO70ZPVmaEMQsU2zOyInxo9h7oujlmRvxljigjlTWTYR9geKPR8IDei6ml
        wn4GvTwDNYN5jMzV85CH3FLnnqzt6GcxsreTEGPNhDLMfuy9DDfsscZd2IfGe5nRDM7zQR5yy90HtUCr
        /8hf5DTALKQV+RUfWnu20nk568qgGs/0IQ+5lbvfZO3EvpA9/MtfJDfZ9xqcDaydGRWM7+g37C2/A+He
        ZcwM5CG32nskKxr/Rqlim7qTfxsDecituX/oP97oSUII7lTnAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="label2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABEAAAAbCAYAAACa9mScAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsEAAA7BAbiRa+0AAAEGSURBVEhL7ZQhq4RAFIX3L1sNgoiIWEXEarGJSZNgstjE
        JJhMIiwsWES4y7lBHGd2l7e29174YDye+bjX4O1+f9BV/iUyt23b6Cp/SVLXNUVRRJZlURAEVFUVresq
        9V5K4jgmTdMkfN+XREoJJsAFXdepaRqaponatiXDMDgvikLoKyVYAWUIjnnf95y7rivkSolpmlye51l6
        hxwcM6UkDEMudl0n5OM4cm7btpArJUmScBkTDcPAGQSO43CeZZnQlyRlWXLxFRAtyyLcESRnAdbyPI/P
        WAETnAVgl+R5LgjwfCy+gyVXBIAlaZruApzPpU/s6+DyNwIgfNhv+W0S1d/7ZzzoCaNQpFl8PNQ4AAAA
        AElFTkSuQmCC
</value>
  </data>
</root>